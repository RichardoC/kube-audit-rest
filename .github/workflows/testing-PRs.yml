name: Test PRs
on:
  pull_request:
    # TODO, should run both when opened and updated
    types: [ labeled ] # So that only labelled PRs get run. https://securitylab.github.com/research/github-actions-preventing-pwn-requests/

# Explicitly grant the `secrets.GITHUB_TOKEN` no permissions.
permissions: {}
jobs:
  test-via-docker:
    name: Build and test via Docker üê≥ images üì¶
    runs-on: ubuntu-latest
    steps:
      - name: Setup Action
        uses: actions/checkout@v4.1.0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.0.0
        with:
          platforms: 'arm64'
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0
      - name: Build alpine based image
        uses: docker/build-push-action@v5.0.0
        with:
          file: Dockerfile-alpine
          context: .
          push: false # DO NOT PUSH AS UNTRUSTED
          tags: |
            ghcr.io/richardoc/kube-audit-rest:test-alpine
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Build distroless image
        uses: docker/build-push-action@v5.0.0
        with:
          file: Dockerfile-distroless
          context: .
          push: false # DO NOT PUSH AS UNTRUSTED
          tags: |
            ghcr.io/richardoc/kube-audit-rest:test-distroless
            ghcr.io/richardoc/kube-audit-rest:latest
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
  execute-unittests:
    name: Execute the unittests
    runs-on: ubuntu-latest
    steps:
      - name: Setup Action
        uses: actions/checkout@v4.1.0

      - name: Set up Go
        uses: actions/setup-go@v4.1.0
        with:
          go-version: 1.21

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v ./...
  run-trivy:
    name: Run trivy
    runs-on: ubuntu-latest
    steps:
      - name: Setup Action
        uses: actions/checkout@v4.1.0
      - name: Run Trivy vulnerability scanner in fs mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'repo-results.sarif'
          exit-code: '1'
          severity: 'CRITICAL,HIGH'
